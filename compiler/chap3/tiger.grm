%%
%term
    EOF 
  | ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE 

%nonterm  
  exp 
  | program 
  | r_val | valueless_exp 
  | declarations | declaration
  | type_dec | vardec | fundec | ty | tyfield | more_tyfield
  | l_val


%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
	DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%%

program	: exp				()
exp: r_val 			()
    | valueless_exp ()
    | NIL ()
    | LPAREN more_exp exp RPAREN () (* come back to address this *)
    | LPAREN RPAREN ()
    |  ()
    | STRING ()

more_exp : 
    NIL ()
    | exp SEMICOLON more_exp ()

declarations 
    :  ()
    | declaration declarations ()

declaration :
    type_dec ()
    | vardec ()
    | fundec ()

type_dec : TYPE type_id EQ ty ()

ty : type_id ()
    | LBRACK ID RBRACK ()
    | ARRAY OF ID ()

tyfield : ()
    | ID COLON ID more_tyfield

more_tyfield : ()
    | COMMA COLON ID more_tyfield ()

vardec : VAR ID ASSIGN exp ()
    | VAR ID COLON ID ASSIGN exp ()

fundec : FUNCTION ID LPAREN tyfield RPAREN EQ exp ()
    | FUNCTION ID LPAREN tyfield RPAREN COLON ID EQ exp ()

l_val : ID ()
    | l_val DOT ID () 
    | l_val LBRACE exp RBRACE ()