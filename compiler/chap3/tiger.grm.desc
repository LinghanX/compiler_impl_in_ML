64 shift/reduce conflicts

error:  state 20: shift/reduce conflict (shift LBRACK, reduce by rule 69)
error:  state 63: shift/reduce conflict (shift TYPE, reduce by rule 47)
error:  state 64: shift/reduce conflict (shift FUNCTION, reduce by rule 31)
error:  state 92: shift/reduce conflict (shift OR, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift AND, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift GE, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift GT, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift LE, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift LT, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift NEQ, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift EQ, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift DIVIDE, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift TIMES, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift MINUS, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift PLUS, reduce by rule 11)
error:  state 93: shift/reduce conflict (shift ELSE, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift OR, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift AND, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift GE, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift GT, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift LE, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift LT, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift NEQ, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift EQ, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift DIVIDE, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift TIMES, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift MINUS, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift PLUS, reduce by rule 10)
error:  state 123: shift/reduce conflict (shift OR, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift AND, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift GE, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift GT, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift LE, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift LT, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift NEQ, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift EQ, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift DIVIDE, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift TIMES, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift MINUS, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift PLUS, reduce by rule 9)
error:  state 125: shift/reduce conflict (shift OR, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift AND, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift GE, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift GT, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift LE, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift LT, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift NEQ, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift EQ, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift DIVIDE, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift TIMES, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift MINUS, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift PLUS, reduce by rule 44)
error:  state 139: shift/reduce conflict (shift OR, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift AND, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift GE, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift GT, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift LE, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift LT, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift NEQ, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift EQ, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift DIVIDE, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift TIMES, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift MINUS, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift PLUS, reduce by rule 12)

state 0:

	program : . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 9
	program	goto 150
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 1:

	exp : bool_exp .  (reduce by rule 19)



	.	reduce by rule 19


state 2:

	exp : com_exp .  (reduce by rule 18)



	.	reduce by rule 18


state 3:

	exp : arith_exp .  (reduce by rule 17)



	.	reduce by rule 17


state 4:

	exp : func_call .  (reduce by rule 16)



	.	reduce by rule 16


state 5:

	exp : array_creation .  (reduce by rule 7)



	.	reduce by rule 7


state 6:

	exp : record_creation .  (reduce by rule 6)



	.	reduce by rule 6


state 7:

	exp : unit_exp .  (reduce by rule 5)



	.	reduce by rule 5


state 8:

	exp : l_value .  (reduce by rule 1)
	exp : l_value . ASSIGN exp 
	l_value : l_value . DOT ID 
	l_value : l_value . LBRACK exp RBRACK 

	LBRACK	shift 23
	DOT	shift 22
	ASSIGN	shift 21


	.	reduce by rule 1


state 9:

	program : exp .  (reduce by rule 0)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 0


state 10:

	exp : NIL .  (reduce by rule 4)



	.	reduce by rule 4


state 11:

	exp : BREAK .  (reduce by rule 13)



	.	reduce by rule 13


state 12:

	exp : LET . decs IN expseq END 


	decs	goto 36

	.	reduce by rule 27


state 13:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 37


	.	error


state 14:

	exp : WHILE . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 38
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 15:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 39
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 16:

	exp : MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 40
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 17:

	exp : LPAREN . expseq RPAREN 
	unit_exp : LPAREN . RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	RPAREN	shift 43
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 42
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	expseq	goto 41
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 18:

	exp : STRING .  (reduce by rule 3)



	.	reduce by rule 3


state 19:

	exp : INT .  (reduce by rule 2)



	.	reduce by rule 2

error:  state 20: shift/reduce conflict (shift LBRACK, reduce by rule 69)

state 20:

	l_value : ID .  (reduce by rule 69)
	record_creation : ID . LBRACE record_creation_list RBRACE 
	array_creation : ID . LBRACK exp RBRACK OF exp 
	func_call : ID . LPAREN RPAREN 
	func_call : ID . LPAREN explist RPAREN 

	LPAREN	shift 46
	LBRACK	shift 45
	LBRACE	shift 44


	.	reduce by rule 69


state 21:

	exp : l_value ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 47
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 22:

	l_value : l_value DOT . ID 

	ID	shift 48


	.	error


state 23:

	l_value : l_value LBRACK . exp RBRACK 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 49
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 24:

	bool_exp : exp OR . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 50
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 25:

	bool_exp : exp AND . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 51
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 26:

	com_exp : exp GE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 52
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 27:

	com_exp : exp GT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 53
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 28:

	com_exp : exp LE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 54
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 29:

	com_exp : exp LT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 55
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 30:

	com_exp : exp NEQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 56
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 31:

	com_exp : exp EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 57
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 32:

	arith_exp : exp DIVIDE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 58
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 33:

	arith_exp : exp TIMES . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 59
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 34:

	arith_exp : exp MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 60
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 35:

	arith_exp : exp PLUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 61
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 36:

	exp : LET decs . IN expseq END 
	decs : decs . dec 

	IN	shift 71
	FUNCTION	shift 70
	VAR	shift 69
	TYPE	shift 68

	dec	goto 67
	typedecs	goto 66
	vardec	goto 65
	fundecs	goto 64
	typedec	goto 63
	fundec	goto 62

	.	error


state 37:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 72


	.	error


state 38:

	exp : WHILE exp . DO exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 73


	.	error


state 39:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	THEN	shift 74


	.	error


state 40:

	exp : MINUS exp .  (reduce by rule 20)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	AND	shift 25
	OR	shift 24


	.	reduce by rule 20


state 41:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 75


	.	error


state 42:

	expseq : exp .  (reduce by rule 45)
	expseq : exp . SEMICOLON expseq 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	SEMICOLON	shift 76
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 45


state 43:

	unit_exp : LPAREN RPAREN .  (reduce by rule 21)



	.	reduce by rule 21


state 44:

	record_creation : ID LBRACE . record_creation_list RBRACE 

	ID	shift 79

	record	goto 78
	record_creation_list	goto 77

	.	reduce by rule 39


state 45:

	array_creation : ID LBRACK . exp RBRACK OF exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 80
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 46:

	func_call : ID LPAREN . RPAREN 
	func_call : ID LPAREN . explist RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	RPAREN	shift 83
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 82
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1
	explist	goto 81

	.	error


state 47:

	exp : l_value ASSIGN exp .  (reduce by rule 8)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 8


state 48:

	l_value : l_value DOT ID .  (reduce by rule 70)



	.	reduce by rule 70


state 49:

	l_value : l_value LBRACK exp . RBRACK 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	RBRACK	shift 84
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 50:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	bool_exp : exp OR exp .  (reduce by rule 68)



	.	reduce by rule 68


state 51:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp AND exp .  (reduce by rule 67)
	bool_exp : exp . OR exp 



	.	reduce by rule 67


state 52:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	com_exp : exp GE exp .  (reduce by rule 66)
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 66
	COMMA	reduce by rule 66
	SEMICOLON	reduce by rule 66
	RPAREN	reduce by rule 66
	RBRACK	reduce by rule 66
	RBRACE	reduce by rule 66
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 25
	OR	shift 24
	THEN	reduce by rule 66
	ELSE	reduce by rule 66
	TO	reduce by rule 66
	DO	reduce by rule 66
	IN	reduce by rule 66
	END	reduce by rule 66
	FUNCTION	reduce by rule 66
	VAR	reduce by rule 66
	TYPE	reduce by rule 66


	.	error


state 53:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp GT exp .  (reduce by rule 65)
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 65
	COMMA	reduce by rule 65
	SEMICOLON	reduce by rule 65
	RPAREN	reduce by rule 65
	RBRACK	reduce by rule 65
	RBRACE	reduce by rule 65
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 25
	OR	shift 24
	THEN	reduce by rule 65
	ELSE	reduce by rule 65
	TO	reduce by rule 65
	DO	reduce by rule 65
	IN	reduce by rule 65
	END	reduce by rule 65
	FUNCTION	reduce by rule 65
	VAR	reduce by rule 65
	TYPE	reduce by rule 65


	.	error


state 54:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp LE exp .  (reduce by rule 64)
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 64
	COMMA	reduce by rule 64
	SEMICOLON	reduce by rule 64
	RPAREN	reduce by rule 64
	RBRACK	reduce by rule 64
	RBRACE	reduce by rule 64
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 25
	OR	shift 24
	THEN	reduce by rule 64
	ELSE	reduce by rule 64
	TO	reduce by rule 64
	DO	reduce by rule 64
	IN	reduce by rule 64
	END	reduce by rule 64
	FUNCTION	reduce by rule 64
	VAR	reduce by rule 64
	TYPE	reduce by rule 64


	.	error


state 55:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp LT exp .  (reduce by rule 63)
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 63
	COMMA	reduce by rule 63
	SEMICOLON	reduce by rule 63
	RPAREN	reduce by rule 63
	RBRACK	reduce by rule 63
	RBRACE	reduce by rule 63
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 25
	OR	shift 24
	THEN	reduce by rule 63
	ELSE	reduce by rule 63
	TO	reduce by rule 63
	DO	reduce by rule 63
	IN	reduce by rule 63
	END	reduce by rule 63
	FUNCTION	reduce by rule 63
	VAR	reduce by rule 63
	TYPE	reduce by rule 63


	.	error


state 56:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp NEQ exp .  (reduce by rule 62)
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 62
	COMMA	reduce by rule 62
	SEMICOLON	reduce by rule 62
	RPAREN	reduce by rule 62
	RBRACK	reduce by rule 62
	RBRACE	reduce by rule 62
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 25
	OR	shift 24
	THEN	reduce by rule 62
	ELSE	reduce by rule 62
	TO	reduce by rule 62
	DO	reduce by rule 62
	IN	reduce by rule 62
	END	reduce by rule 62
	FUNCTION	reduce by rule 62
	VAR	reduce by rule 62
	TYPE	reduce by rule 62


	.	error


state 57:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp EQ exp .  (reduce by rule 61)
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 61
	COMMA	reduce by rule 61
	SEMICOLON	reduce by rule 61
	RPAREN	reduce by rule 61
	RBRACK	reduce by rule 61
	RBRACE	reduce by rule 61
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 25
	OR	shift 24
	THEN	reduce by rule 61
	ELSE	reduce by rule 61
	TO	reduce by rule 61
	DO	reduce by rule 61
	IN	reduce by rule 61
	END	reduce by rule 61
	FUNCTION	reduce by rule 61
	VAR	reduce by rule 61
	TYPE	reduce by rule 61


	.	error


state 58:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	arith_exp : exp DIVIDE exp .  (reduce by rule 60)
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	AND	shift 25
	OR	shift 24


	.	reduce by rule 60


state 59:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp TIMES exp .  (reduce by rule 59)
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	AND	shift 25
	OR	shift 24


	.	reduce by rule 59


state 60:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp MINUS exp .  (reduce by rule 58)
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 25
	OR	shift 24


	.	reduce by rule 58


state 61:

	arith_exp : exp . PLUS exp 
	arith_exp : exp PLUS exp .  (reduce by rule 57)
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 25
	OR	shift 24


	.	reduce by rule 57


state 62:

	fundecs : fundec .  (reduce by rule 34)



	.	reduce by rule 34

error:  state 63: shift/reduce conflict (shift TYPE, reduce by rule 47)

state 63:

	typedecs : typedec .  (reduce by rule 47)
	typedecs : typedec . typedecs 

	TYPE	shift 68

	typedecs	goto 85
	typedec	goto 63

	.	reduce by rule 47

error:  state 64: shift/reduce conflict (shift FUNCTION, reduce by rule 31)

state 64:

	dec : fundecs .  (reduce by rule 31)
	fundecs : fundecs . fundec 

	FUNCTION	shift 70

	fundec	goto 86

	.	reduce by rule 31


state 65:

	dec : vardec .  (reduce by rule 30)



	.	reduce by rule 30


state 66:

	dec : typedecs .  (reduce by rule 29)



	.	reduce by rule 29


state 67:

	decs : decs dec .  (reduce by rule 28)



	.	reduce by rule 28


state 68:

	typedec : TYPE . ID EQ ty 

	ID	shift 87


	.	error


state 69:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 88


	.	error


state 70:

	fundec : FUNCTION . ID LPAREN ty_fields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN ty_fields RPAREN COLON ID EQ exp 

	ID	shift 89


	.	error


state 71:

	exp : LET decs IN . expseq END 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 42
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	expseq	goto 90
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 72:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 91
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 73:

	exp : WHILE exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 92
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 74:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 93
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 75:

	exp : LPAREN expseq RPAREN .  (reduce by rule 15)



	.	reduce by rule 15


state 76:

	expseq : exp SEMICOLON . expseq 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 42
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	expseq	goto 94
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 77:

	record_creation : ID LBRACE record_creation_list . RBRACE 

	RBRACE	shift 95


	.	error


state 78:

	record_creation_list : record . more_records 

	COMMA	shift 97

	more_records	goto 96

	.	reduce by rule 42


state 79:

	record : ID . EQ exp 

	EQ	shift 98


	.	error


state 80:

	array_creation : ID LBRACK exp . RBRACK OF exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	RBRACK	shift 99
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 81:

	func_call : ID LPAREN explist . RPAREN 

	RPAREN	shift 100


	.	error


state 82:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	explist : exp . more_exp 

	COMMA	shift 102
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	more_exp	goto 101

	.	reduce by rule 25


state 83:

	func_call : ID LPAREN RPAREN .  (reduce by rule 22)



	.	reduce by rule 22


state 84:

	l_value : l_value LBRACK exp RBRACK .  (reduce by rule 71)



	.	reduce by rule 71


state 85:

	typedecs : typedec typedecs .  (reduce by rule 48)



	.	reduce by rule 48


state 86:

	fundecs : fundecs fundec .  (reduce by rule 35)



	.	reduce by rule 35


state 87:

	typedec : TYPE ID . EQ ty 

	EQ	shift 103


	.	error


state 88:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 105
	ASSIGN	shift 104


	.	error


state 89:

	fundec : FUNCTION ID . LPAREN ty_fields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN ty_fields RPAREN COLON ID EQ exp 

	LPAREN	shift 106


	.	error


state 90:

	exp : LET decs IN expseq . END 

	END	shift 107


	.	error


state 91:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	TO	shift 108


	.	error

error:  state 92: shift/reduce conflict (shift OR, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift AND, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift GE, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift GT, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift LE, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift LT, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift NEQ, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift EQ, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift DIVIDE, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift TIMES, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift MINUS, reduce by rule 11)
error:  state 92: shift/reduce conflict (shift PLUS, reduce by rule 11)

state 92:

	exp : WHILE exp DO exp .  (reduce by rule 11)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 11

error:  state 93: shift/reduce conflict (shift ELSE, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift OR, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift AND, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift GE, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift GT, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift LE, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift LT, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift NEQ, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift EQ, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift DIVIDE, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift TIMES, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift MINUS, reduce by rule 10)
error:  state 93: shift/reduce conflict (shift PLUS, reduce by rule 10)

state 93:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 10)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	ELSE	shift 109


	.	reduce by rule 10


state 94:

	expseq : exp SEMICOLON expseq .  (reduce by rule 46)



	.	reduce by rule 46


state 95:

	record_creation : ID LBRACE record_creation_list RBRACE .  (reduce by rule 38)



	.	reduce by rule 38


state 96:

	record_creation_list : record more_records .  (reduce by rule 40)



	.	reduce by rule 40


state 97:

	more_records : COMMA . record more_records 

	ID	shift 79

	record	goto 110

	.	error


state 98:

	record : ID EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 111
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 99:

	array_creation : ID LBRACK exp RBRACK . OF exp 

	OF	shift 112


	.	error


state 100:

	func_call : ID LPAREN explist RPAREN .  (reduce by rule 23)



	.	reduce by rule 23


state 101:

	explist : exp more_exp .  (reduce by rule 24)



	.	reduce by rule 24


state 102:

	more_exp : COMMA . exp more_exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 113
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 103:

	typedec : TYPE ID EQ . ty 

	ID	shift 117
	LBRACE	shift 116
	ARRAY	shift 115

	ty	goto 114

	.	error


state 104:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 118
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 105:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 119


	.	error


state 106:

	fundec : FUNCTION ID LPAREN . ty_fields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . ty_fields RPAREN COLON ID EQ exp 

	ID	shift 121

	ty_fields	goto 120

	.	reduce by rule 53


state 107:

	exp : LET decs IN expseq END .  (reduce by rule 14)



	.	reduce by rule 14


state 108:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 122
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 109:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 123
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 110:

	more_records : COMMA record . more_records 

	COMMA	shift 97

	more_records	goto 124

	.	reduce by rule 42


state 111:

	record : ID EQ exp .  (reduce by rule 41)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 41


state 112:

	array_creation : ID LBRACK exp RBRACK OF . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 125
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 113:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	more_exp : COMMA exp . more_exp 

	COMMA	shift 102
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	more_exp	goto 126

	.	reduce by rule 25


state 114:

	typedec : TYPE ID EQ ty .  (reduce by rule 49)



	.	reduce by rule 49


state 115:

	ty : ARRAY . OF ID 

	OF	shift 127


	.	error


state 116:

	ty : LBRACE . ty_fields RBRACE 

	ID	shift 121

	ty_fields	goto 128

	.	reduce by rule 53


state 117:

	ty : ID .  (reduce by rule 50)



	.	reduce by rule 50


state 118:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 32)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 32


state 119:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 129


	.	error


state 120:

	fundec : FUNCTION ID LPAREN ty_fields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN ty_fields . RPAREN COLON ID EQ exp 

	RPAREN	shift 130


	.	error


state 121:

	ty_fields : ID . COLON ID more_ty_fields 

	COLON	shift 131


	.	error


state 122:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 132


	.	error

error:  state 123: shift/reduce conflict (shift OR, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift AND, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift GE, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift GT, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift LE, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift LT, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift NEQ, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift EQ, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift DIVIDE, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift TIMES, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift MINUS, reduce by rule 9)
error:  state 123: shift/reduce conflict (shift PLUS, reduce by rule 9)

state 123:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 9)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 9


state 124:

	more_records : COMMA record more_records .  (reduce by rule 43)



	.	reduce by rule 43

error:  state 125: shift/reduce conflict (shift OR, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift AND, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift GE, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift GT, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift LE, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift LT, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift NEQ, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift EQ, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift DIVIDE, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift TIMES, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift MINUS, reduce by rule 44)
error:  state 125: shift/reduce conflict (shift PLUS, reduce by rule 44)

state 125:

	array_creation : ID LBRACK exp RBRACK OF exp .  (reduce by rule 44)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 44


state 126:

	more_exp : COMMA exp more_exp .  (reduce by rule 26)



	.	reduce by rule 26


state 127:

	ty : ARRAY OF . ID 

	ID	shift 133


	.	error


state 128:

	ty : LBRACE ty_fields . RBRACE 

	RBRACE	shift 134


	.	error


state 129:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 135
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 130:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN ty_fields RPAREN . COLON ID EQ exp 

	COLON	shift 137
	EQ	shift 136


	.	error


state 131:

	ty_fields : ID COLON . ID more_ty_fields 

	ID	shift 138


	.	error


state 132:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 139
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 133:

	ty : ARRAY OF ID .  (reduce by rule 52)



	.	reduce by rule 52


state 134:

	ty : LBRACE ty_fields RBRACE .  (reduce by rule 51)



	.	reduce by rule 51


state 135:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 33)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 33


state 136:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 140
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 137:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN COLON . ID EQ exp 

	ID	shift 141


	.	error


state 138:

	ty_fields : ID COLON ID . more_ty_fields 

	COMMA	shift 143

	more_ty_fields	goto 142

	.	reduce by rule 55

error:  state 139: shift/reduce conflict (shift OR, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift AND, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift GE, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift GT, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift LE, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift LT, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift NEQ, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift EQ, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift DIVIDE, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift TIMES, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift MINUS, reduce by rule 12)
error:  state 139: shift/reduce conflict (shift PLUS, reduce by rule 12)

state 139:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 12)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 12


state 140:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN ty_fields RPAREN EQ exp .  (reduce by rule 36)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 36


state 141:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN COLON ID . EQ exp 

	EQ	shift 144


	.	error


state 142:

	ty_fields : ID COLON ID more_ty_fields .  (reduce by rule 54)



	.	reduce by rule 54


state 143:

	more_ty_fields : COMMA . ID COLON ID more_ty_fields 

	ID	shift 145


	.	error


state 144:

	fundec : FUNCTION ID LPAREN ty_fields RPAREN COLON ID EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 146
	l_value	goto 8
	unit_exp	goto 7
	record_creation	goto 6
	array_creation	goto 5
	func_call	goto 4
	arith_exp	goto 3
	com_exp	goto 2
	bool_exp	goto 1

	.	error


state 145:

	more_ty_fields : COMMA ID . COLON ID more_ty_fields 

	COLON	shift 147


	.	error


state 146:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	com_exp : exp . EQ exp 
	com_exp : exp . NEQ exp 
	com_exp : exp . LT exp 
	com_exp : exp . LE exp 
	com_exp : exp . GT exp 
	com_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN ty_fields RPAREN COLON ID EQ exp .  (reduce by rule 37)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 37


state 147:

	more_ty_fields : COMMA ID COLON . ID more_ty_fields 

	ID	shift 148


	.	error


state 148:

	more_ty_fields : COMMA ID COLON ID . more_ty_fields 

	COMMA	shift 143

	more_ty_fields	goto 149

	.	reduce by rule 55


state 149:

	more_ty_fields : COMMA ID COLON ID more_ty_fields .  (reduce by rule 56)



	.	reduce by rule 56


state 150:


	EOF	accept


	.	error

476 of 1006 action table entries left after compaction
351 goto table entries
